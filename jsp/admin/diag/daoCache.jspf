<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<%@ taglib uri="/WEB-INF/dva_html.tld" prefix="el" %>
<%@ taglib uri="/WEB-INF/dva_view.tld" prefix="view" %>
<%@ taglib uri="/WEB-INF/dva_format.tld" prefix="fmt" %>
<%@ taglib uri="/WEB-INF/dva_diag.tld" prefix="diag" %>
<!-- DAO Cache Data Table -->
<el:table className="view">
<tr class="title caps">
 <td colspan="8" class="left">DATA CACHE INFORMATION - <span class="und" onclick="void golgotha.util.toggleExpand(this, 'daoCacheEntry')">COLLAPSE</span></td>
</tr>

<!-- DAO Cache Title Bar -->
<tr class="title caps" id="cacheTitleBar">
 <td style="width:20%">CACHE ID</td>
 <td style="width:15%">CACHE TYPE</td>
 <td style="width:10%">SIZE</td>
 <td style="width:10%">CAPACITY</td>
 <td style="width:10%">FILL RATE</td>
 <td style="width:10%">REQUESTS</td>
 <td style="width:10%">HITS</td>
 <td>HIT RATE</td>
</tr>
</el:table>
<script async>
golgotha.local.cacheUpdate = function(updateInterval) {
	const xmlreq = new XMLHttpRequest();
	xmlreq.open('GET', 'cacheinfo.ws', true);
	xmlreq.onreadystatechange = function() {
		if ((xmlreq.readyState != 4) || (xmlreq.status != 200)) return false;

		// Clear the table
		var title = document.getElementById('cacheTitleBar');
		var rows = golgotha.util.getElementsByClass('daoCacheEntry', 'tr');
		for (var r = rows.pop(); (r != null); r = rows.pop())
			r.parentNode.removeChild(r);

        // Parse the response
		const jsData = JSON.parse(xmlreq.responseText);
        jsData.caches.forEach(function(c) {
			const r = document.createElement('tr');
			r.setAttribute('class', 'daoCacheEntry');
			const ic = golgotha.local.createCell(c.id, 'pri bld'); ic.cacheID = c.id;
			ic.addEventListener('dblclick', function() { golgotha.local.cacheClear(this.cacheID); });
			r.appendChild(ic);
			r.appendChild(golgotha.local.createCell(c.type));
			r.appendChild(golgotha.local.createCell(c.size));
			if (c.remote) {
				let msg = c.latency + 'ms latency';
				if (c.errors > 0)
					msg += ' (' + c.errors + ' errors)';

				const cc = r.appendChild(golgotha.local.createCell(msg));
				cc.setAttribute('colspan', '2');
				r.appendChild(cc);
			} else {
				r.appendChild(golgotha.local.createCell(c.maxSize));
				r.appendChild(golgotha.local.createCell(c.fill, 'sec'));
			}

			r.appendChild(golgotha.local.createCell(c.reqs));
			r.appendChild(golgotha.local.createCell(c.hits));
			r.appendChild(golgotha.local.createCell((c.hitRate == null) ? 'N/A' : c.hitRate, 'bld'));
			title.parentNode.insertBefore(r, null);
		});

	    if (updateInterval > 0)
	        window.setTimeout(golgotha.local.cacheUpdate, updateInterval, updateInterval);

	    return true;
	};

	xmlreq.send(null);
	return true;
};

golgotha.local.createCell = function(txt, className) {
	const td = document.createElement('td');
	if (className != null) td.setAttribute('class', className);
	td.appendChild(document.createTextNode(txt));
	return td;
};

golgotha.local.cacheClear = function(id) {
	const xmlreq = new XMLHttpRequest();
	xmlreq.open('post', 'cacheclear.ws?id=' + id, true);
	xmlreq.onreadystatechange = function() {
		if ((xmlreq.readyState != 4) || (xmlreq.status != 200)) return false;
		alert('Cleared "' + id + '" cache');
		return true;
	};
	
	xmlreq.send(null);
	return true;
};

window.setTimeout(golgotha.local.cacheUpdate, 2500, 2500);
</script>
