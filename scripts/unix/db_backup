#!/bin/bash
# Database backup script
# (c) 2005 - 2012 Global Virtual Airlines Group. All Rights Reserved.

# Set archiving/mysqldump options
arc_util="pbzip2 -p4 -7 -b20 -c"
dump_opt="--single-transaction -e -K -n -q"
dump_create_opt="--single-transaction -e -K -q"

# Log Starting
echo `date +%H:%M:%S`' Starting'

# Goto backup directory
cd /home/backup/db

# Backup AWSTATS tables
echo `date +%H:%M:%S`' Writing AWStats database'
tar cf - /home/awstats | $arc_util > awstats.tar.bz2 

# Set up mysql utility aliases
mysql="/usr/local/mysql/bin/mysql --socket=/var/run/mysql/mysql.sock --skip-column-names"
mysqldump="/usr/local/mysql/bin/mysqldump --socket=/var/run/mysql/mysql.sock"

# Dump core table
echo `date +%H:%M:%S`' Writing mySQL configuration'
$mysqldump -e --flush-privileges -K `cat /usr/local/etc/sqlbackup` mysql | $arc_util > mysql.sql.bz2

# Dump table definitions
echo `date +%H:%M:%S`' Writing table definitions'
$mysqldump -e -K -d --single-transaction --skip-triggers `cat /usr/local/etc/sqlbackup` common > common.sql
$mysqldump -e -K -d --single-transaction `cat /usr/local/etc/sqlbackup` events > event.sql
$mysqldump -e -K -d --single-transaction `cat /usr/local/etc/sqlbackup` acars > acars.sql
$mysqldump -e -K -d --single-transaction `cat /usr/local/etc/sqlbackup` xacars > xacars.sql
$mysqldump -e -K -d --single-transaction `cat /usr/local/etc/sqlbackup` exams > exams.sql
$mysqldump -e -K -d --single-transaction `cat /usr/local/etc/sqlbackup` dva > dva.sql
$mysqldump -e -K -d --single-transaction `cat /usr/local/etc/sqlbackup` afv > afv.sql
tar cfj create_tables.tar.bz2 *.sql
rm *.sql

# Dump e-mail data
echo `date +%H:%M:%S`' Writing e-mail configuration'
$mysqldump $dump_opt `cat /usr/local/etc/sqlbackup` postfix | $arc_util > postfix.sql.bz2
$mysqldump $dump_opt `cat /usr/local/etc/sqlbackup` rcmail | $arc_util > rcmail.sql.bz2

# Dump TeamSpeak data
echo `date +%H:%M:%S`' Writing TeamSpeak configuration'
$mysqldump $dump_opt `cat /usr/local/etc/sqlbackup` teamspeak | $arc_util > teamspeak.sql.bz2

# Dump GeoIP data
echo `date +%H:%M:%S`' Writing GeoIP data'
$mysqldump $dump_opt `cat /usr/local/etc/sqlbackup` geoip | $arc_util > geoip.sql.bz2

# Dump online track data
echo `date +%H:%M:%S`' Writing Online Track data'
$mysqldump $dump_opt `cat /usr/local/etc/sqlbackup` online | $arc_util > online.sql.bz2

# Dump XACARS track data
echo `date +%H:%M:%S`' Writing XACARS Track data'
$mysqldump $dump_opt `cat /usr/local/etc/sqlbackup` xacars | $arc_util > xacars.sql.bz2

# Dump Common data/Water Cooler/Events
echo `date +%H:%M:%S`' Writing Common data'
$mysqldump $dump_opt `cat /usr/local/etc/sqlbackup` common AIRLINEINFO TZ COUNTRY AIRCRAFT AIRCRAFT_AIRLINE AIRLINES APP_AIRLINES AIRLINE_CODES AIRPORTS AIRPORT_AIRLINE AIRPORT_CODES USERDATA XDB_IDS EQPROGRAMS EQAIRLINES AUTH AUTH_ALIAS OCEANIC OCEANIC_ROUTES RESOURCES SYSINFODATA | $arc_util > common.sql.bz2
$mysqldump $dump_opt `cat /usr/local/etc/sqlbackup` common ISSUES ISSUE_COMMENTS ISSUE_FILES > issues.sql.bz2
$mysqldump $dump_opt `cat /usr/local/etc/sqlbackup` common NAVDATA NAVREGIONS SID_STAR AIRWAYS RUNWAYS ROUTE_CACHE MAGVAR FIR FIRALIAS FIRDATA CHARTS CHARTURLS | $arc_util > navdata.sql.bz2
$mysqldump $dump_opt `cat /usr/local/etc/sqlbackup` common METARS TAFS | $arc_util > weather.sql.bz2
$mysqldump $dump_opt `cat /usr/local/etc/sqlbackup` events | $arc_util > events.sql.bz2

# Dump testing database
echo `date +%H:%M:%S`' Writing Examinations'
$mysqldump $dump_opt `cat /usr/local/etc/sqlbackup` exams | $arc_util > exams.sql.bz2

# Dump Water Cooler
echo `date +%H:%M:%S`' Writing Water Cooler'
$mysqldump $dump_opt `cat /usr/local/etc/sqlbackup` common COOLER_CHANNELS COOLER_CHANNELINFO COOLER_THREADS COOLER_THREADHISTORY COOLER_POSTS COOLER_REPORTS COOLER_NOTIFY COOLER_POLLS COOLER_VOTES COOLER_IMGURLS | $arc_util > cooler.sql.bz2

# Dump Navigation Data if we're doing a full backup
if [ "$1" = "full" ]
then
  echo `date +%H:%M:%S`' Write last backup time'
  echo 'SELECT UNIX_TIMESTAMP(NOW())' | $mysql `cat /usr/local/etc/sqlbackup` acars > lastbackuptime

  echo `date +%H:%M:%S`' Writing ACARS Position Archive'
  $mysqldump $dump_opt `cat /usr/local/etc/sqlbackup` acars POS_ARCHIVE | $arc_util > acars_pos.sql.bz2
else
  echo `date +%H:%M:%S`' Writing Incremental ACARS Positions'
  $mysqldump $dump_create_opt -t `cat /usr/local/etc/sqlbackup` --where="ARCHIVED > FROM_UNIXTIME(`cat lastbackuptime`)" acars POS_ARCHIVE  | $arc_util > acars_pos_inc.sql.bz2
fi

# Dump ACARS data
echo `date +%H:%M:%S`' Writing ACARS data'
$mysqldump $dump_opt `cat /usr/local/etc/sqlbackup` --ignore-table=acars.POS_ARCHIVE acars | $arc_util > acars.sql.bz2

# Dump DVA database
echo `date +%H:%M:%S`' Writing DVA database'
$mysqldump $dump_opt `cat /usr/local/etc/sqlbackup` --ignore-table=dva.GALLERY dva | $arc_util > dva.sql.bz2

# Dump AFV database
echo `date +%H:%M:%S`' Writing AFV database'
$mysqldump $dump_opt `cat /usr/local/etc/sqlbackup` --ignore-table=afv.GALLERY afv | $arc_util > afv.sql.bz2

# Dump Galleries if we're doing a full backup
if [ "$1" = "full" ]
then
  echo `date +%H:%M:%S`' Writing DVA Image Gallery'
  $mysqldump $dump_opt `cat /usr/local/etc/sqlbackup` dva GALLERY | $arc_util > dva_gallery.sql.bz2
  echo `date +%H:%M:%S`' Writing AFV Image Gallery'
  $mysqldump $dump_opt `cat /usr/local/etc/sqlbackup` afv GALLERY | $arc_util > afv_gallery.sql.bz2
else  
  echo `date +%H:%M:%S`' Writing Incremental DVA Image Gallery'
  $mysqldump $dump_opt -t `cat /usr/local/etc/sqlbackup` --where="DATE > FROM_UNIXTIME(`cat lastbackuptime`)" dva GALLERY | $arc_util > dva_gallery_inc.sql.bz2
  echo `date +%H:%M:%S`' Writing Incremental AFV Image Gallery'
  $mysqldump $dump_opt -t `cat /usr/local/etc/sqlbackup` --where="DATE > FROM_UNIXTIME(`cat lastbackuptime`)" afv GALLERY | $arc_util > afv_gallery_inc.sql.bz2
fi

# Dump VATSIM data
echo `date +%H:%M:%S`' Writing VATSIM stats database'
$mysqldump $dump_opt `cat /usr/local/etc/sqlbackup` vatsim | $arc_util > vatsim.sql.bz2

# Change file permissions
echo `date +%H:%M:%S`' Setting file permissions'
chown -R backup:gva *
chmod 640 *

# Log Completion
echo `date +%H:%M:%S`' Complete'
exit 0
