<?xml version="1.0" encoding="UTF-8"?>
<taglib xmlns="http://java.sun.com/xml/ns/j2ee" version="2.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-jsptaglibrary_2_0.xsd">
	<tlib-version>1.0</tlib-version>
	<short-name>fn</short-name>
	<uri>http://dva2006.deltava.org/dva2006/dva_jspfunc</uri>

	<!-- Get size of a collection -->
	<function>
		<name>sizeof</name>
		<function-class>org.deltava.taglib.functions.MiscFunctions</function-class>
		<function-signature>int sizeof(java.util.Collection)</function-signature>
	</function>
	
	<function>
		<name>subset</name>
		<function-class>org.deltava.taglib.functions.MiscFunctions</function-class>
		<function-signature>java.util.Collection subset(java.util.Collection, int)</function-signature>
	</function>

	<!-- Get a list entry -->
	<function>
		<name>get</name>
		<function-class>org.deltava.taglib.functions.MiscFunctions</function-class>
		<function-signature>java.lang.Object get(java.util.List, int)</function-signature>
	</function>

	<!-- Get the first entry in a collection -->
	<function>
		<name>first</name>
		<function-class>org.deltava.taglib.functions.MiscFunctions</function-class>
		<function-signature>java.lang.Object first(java.util.Collection)</function-signature>
	</function>

	<!-- Convert a string to lowercase -->
	<function>
		<name>lower</name>
		<function-class>org.deltava.taglib.functions.MiscFunctions</function-class>
		<function-signature>java.lang.String toLower(java.lang.String)</function-signature>
	</function>

	<!-- Convert a string to uppercase -->
	<function>
		<name>upper</name>
		<function-class>org.deltava.taglib.functions.MiscFunctions</function-class>
		<function-signature>java.lang.String toUpper(java.lang.String)</function-signature>
	</function>

	<!-- Check wether a collection contains an object -->
	<function>
		<name>contains</name>
		<function-class>org.deltava.taglib.functions.MiscFunctions</function-class>
		<function-signature>boolean contains(java.util.Collection, java.lang.Object)</function-signature>
	</function>

	<!-- Escape out characters in String -->
	<function>
		<name>escape</name>
		<function-class>org.deltava.taglib.functions.MiscFunctions</function-class>
		<function-signature>java.lang.String escape(java.lang.String)</function-signature>
	</function>

	<!-- Concatenate a collection into a String -->
	<function>
		<name>splice</name>
		<function-class>org.deltava.taglib.functions.MiscFunctions</function-class>
		<function-signature>java.lang.String splice(java.util.Collection, java.lang.String)</function-signature>
	</function>

	<!-- Calculate the difference between two date/times -->
	<function>
		<name>delta</name>
		<function-class>org.deltava.taglib.functions.MiscFunctions</function-class>
		<function-signature>int difference(java.util.Date, java.util.Date)</function-signature>
	</function>
		
	<!-- Converts a number to a hex string -->
	<function>
		<name>hex</name>
		<function-class>org.deltava.taglib.functions.MiscFunctions</function-class>
		<function-signature>java.lang.String toHex(long)</function-signature>
	</function>
	
	<!-- Converts a date/time into a string -->
	<function>
		<name>dateFmt</name>
		<function-class>org.deltava.taglib.functions.MiscFunctions</function-class>
		<function-signature>java.lang.String format(java.util.Date,
			java.lang.String)</function-signature>
	</function>
	
	<!-- Get the ACARS Database ID -->
	<function>
		<name>ACARS_ID</name>
		<function-class>org.deltava.taglib.functions.FlightReportFunctions</function-class>
		<function-signature>int ACARSID(org.deltava.beans.FlightReport)</function-signature>
	</function>
	
	<!-- Get the Event Database ID -->
	<function>
		<name>EventID</name>
		<function-class>org.deltava.taglib.functions.FlightReportFunctions</function-class>
		<function-signature>int eventID(org.deltava.beans.FlightReport)</function-signature>
	</function>
	
	<!-- Get the Flight Assignment Database ID -->
	<function>
		<name>AssignID</name>
		<function-class>org.deltava.taglib.functions.FlightReportFunctions</function-class>
		<function-signature>int assignID(org.deltava.beans.FlightReport)</function-signature>
	</function>
	
	<!-- Get the Pilot Database ID -->
	<function>
		<name>PilotID</name>
		<function-class>org.deltava.taglib.functions.FlightReportFunctions</function-class>
		<function-signature>int pilotID(org.deltava.beans.FlightReport)</function-signature>
	</function>
	
	<!-- Check for ACARS Flight Report -->
	<function>
		<name>isACARS</name>
		<function-class>org.deltava.taglib.functions.FlightReportFunctions</function-class>
		<function-signature>boolean isACARS(org.deltava.beans.FlightReport)</function-signature>
	</function>
	
	<!-- Check for Check Flight -->
	<function>
		<name>isCheckFlight</name>
		<function-class>org.deltava.taglib.functions.FlightReportFunctions</function-class>
		<function-signature>boolean isCheckRide(org.deltava.beans.FlightReport)</function-signature>
	</function>
	
	<!-- Check for Online Flight Report -->
	<function>
		<name>isOnline</name>
		<function-class>org.deltava.taglib.functions.FlightReportFunctions</function-class>
		<function-signature>boolean isOnline(org.deltava.beans.FlightReport)</function-signature>
	</function>

	<!-- Check if Flight counts towards promotion -->
	<function>
		<name>isPromoLeg</name>
		<function-class>org.deltava.taglib.functions.FlightReportFunctions</function-class>
		<function-signature>boolean promoLeg(org.deltava.beans.FlightReport)</function-signature>
	</function>

	<!-- Return what equipment types a Flight counts towards promotion in -->
	<function>
		<name>promoEQTypes</name>
		<function-class>org.deltava.taglib.functions.FlightReportFunctions</function-class>
		<function-signature>java.lang.Stirng promoTypes(org.deltava.beans.FlightReport)</function-signature>
	</function>

	<!-- Get Online Flight Report network name-->
	<function>
		<name>network</name>
		<function-class>org.deltava.taglib.functions.FlightReportFunctions</function-class>
		<function-signature>java.lang.String network(org.deltava.beans.FlightReport)</function-signature>
	</function>
	
	<!-- Check for Unrated Equipment -->
	<function>
		<name>isRated</name>
		<function-class>org.deltava.taglib.functions.FlightReportFunctions</function-class>
		<function-signature>boolean isRated(org.deltava.beans.FlightReport)</function-signature>
	</function>
	
	<!-- Check for Unknown Route flag -->
	<function>
		<name>routeWarn</name>
		<function-class>org.deltava.taglib.functions.FlightReportFunctions</function-class>
		<function-signature>boolean routeWarn(org.deltava.beans.FlightReport)</function-signature>
	</function>
	
	<!-- Check for Suspicious Time flag -->
	<function>
		<name>timeWarn</name>
		<function-class>org.deltava.taglib.functions.FlightReportFunctions</function-class>
		<function-signature>boolean timeWarn(org.deltava.beans.FlightReport)</function-signature>
	</function>
	
	<!-- Check for Check Ride -->
	<function>
		<name>isCheckRide</name>
		<function-class>org.deltava.taglib.functions.TestingFunctions</function-class>
		<function-signature>boolean isCheckRide(org.deltava.beans.testing.Test)</function-signature>
	</function>
	
	<!-- Check for correctly answered question -->
	<function>
		<name>correct</name>
		<function-class>org.deltava.taglib.functions.TestingFunctions</function-class>
		<function-signature>boolean correct(org.deltava.beans.testing.Question)</function-signature>
	</function>
	
	<!-- Check for incorrectly answered question -->
	<function>
		<name>incorrect</name>
		<function-class>org.deltava.taglib.functions.TestingFunctions</function-class>
		<function-signature>boolean incorrect(org.deltava.beans.testing.Test,
			org.deltava.beans.testing.Question)</function-signature>
	</function>
	
	<!-- Check for passed Examination -->
	<function>
		<name>passed</name>
		<function-class>org.deltava.taglib.functions.TestingFunctions</function-class>
		<function-signature>boolean isPass(org.deltava.beans.testing.Test)</function-signature>
	</function>
	
	<!-- Check for failed Examination -->
	<function>
		<name>failed</name>
		<function-class>org.deltava.taglib.functions.TestingFunctions</function-class>
		<function-signature>boolean isFail(org.deltava.beans.testing.Test)</function-signature>
	</function>
	
	<!-- Check for pending Examination -->
	<function>
		<name>pending</name>
		<function-class>org.deltava.taglib.functions.TestingFunctions</function-class>
		<function-signature>boolean isPending(org.deltava.beans.testing.Test)</function-signature>
	</function>
	
	<!-- Check for submitted Examination -->
	<function>
		<name>submitted</name>
		<function-class>org.deltava.taglib.functions.TestingFunctions</function-class>
		<function-signature>boolean isSubmitted(org.deltava.beans.testing.Test)</function-signature>
	</function>
	
	<!-- Get Captain's Examination Name -->
	<function>
		<name>examC</name>
		<function-class>org.deltava.taglib.functions.EquipmentTypeFunctions</function-class>
		<function-signature>java.lang.String examC(org.deltava.beans.EquipmentType)</function-signature>
	</function>
	
	<!-- Get First Officer's Examination Name -->
	<function>
		<name>examFO</name>
		<function-class>org.deltava.taglib.functions.EquipmentTypeFunctions</function-class>
		<function-signature>java.lang.String examFO(org.deltava.beans.EquipmentType)</function-signature>
	</function>
	
	<!-- Get the legs required for promotion -->
	<function>
		<name>promoLegs</name>
		<function-class>org.deltava.taglib.functions.EquipmentTypeFunctions</function-class>
		<function-signature>int promotionLegs(org.deltava.beans.EquipmentType,
			java.lang.String)</function-signature>
	</function>
	
	<!-- Get the hours required for promotion -->
	<function>
		<name>promoHours</name>
		<function-class>org.deltava.taglib.functions.EquipmentTypeFunctions</function-class>
		<function-signature>double promotionHours(org.deltava.beans.EquipmentType,
			java.lang.String)</function-signature>
	</function>

	
	<!-- Check if an Event is available for signup -->
	<function>
		<name>isEventOpen</name>
		<function-class>org.deltava.taglib.functions.OnlineEventFunctions</function-class>
		<function-signature>boolean isOpen(org.deltava.beans.event.Event)</function-signature>
	</function>
	
	<!-- Check if a pilot is signed up for an Event -->
	<function>
		<name>isSignedUp</name>
		<function-class>org.deltava.taglib.functions.OnlineEventFunctions</function-class>
		<function-signature>boolean isSignedUp(org.deltava.beans.event.Event,
			int)</function-signature>
	</function>
	
	<!-- Check if a pilot has an assigned flight for an Event -->
	<function>
		<name>isAssigned</name>
		<function-class>org.deltava.taglib.functions.OnlineEventFunctions</function-class>
		<function-signature>boolean isAssigned(org.deltava.beans.event.Event, int)</function-signature>
	</function>
	
	
	<!-- Check if a Navigation Database entry is an Airport -->
	<function>
		<name>isAirport</name>
		<function-class>org.deltava.taglib.functions.NavDataFunctions</function-class>
		<function-signature>boolean isAirport(org.deltava.beans.navdata.NavigationDataBean)</function-signature>
	</function>
	
	<!-- Check if a Navigation Database entry is an Intersection -->
	<function>
		<name>isIntersection</name>
		<function-class>org.deltava.taglib.functions.NavDataFunctions</function-class>
		<function-signature>boolean isIntersection(org.deltava.beans.navdata.NavigationDataBean)</function-signature>
	</function>
	
	<!-- Check if a Navigation Database entry is an NDB -->
	<function>
		<name>isNDB</name>
		<function-class>org.deltava.taglib.functions.NavDataFunctions</function-class>
		<function-signature>boolean isNDB(org.deltava.beans.navdata.NavigationDataBean)</function-signature>
	</function>
	
	<!-- Check if a Navigation Database entry is a Runway -->
	<function>
		<name>isRunway</name>
		<function-class>org.deltava.taglib.functions.NavDataFunctions</function-class>
		<function-signature>boolean isRunway(org.deltava.beans.navdata.NavigationDataBean)</function-signature>
	</function>
	
	<!-- Check if a Navigation Database entry is a VOR -->
	<function>
		<name>isVOR</name>
		<function-class>org.deltava.taglib.functions.NavDataFunctions</function-class>
		<function-signature>boolean isVOR(org.deltava.beans.navdata.NavigationDataBean)</function-signature>
	</function>
</taglib>
