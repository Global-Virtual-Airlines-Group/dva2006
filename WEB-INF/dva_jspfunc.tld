<?xml version="1.0" encoding="UTF-8"?>
<taglib xmlns="http://java.sun.com/xml/ns/j2ee" version="2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-jsptaglibrary_2_0.xsd">
	<tlib-version>1.0</tlib-version>
	<short-name>fn</short-name>
	<uri>http://dva2006.deltava.org/dva2006/dva_jspfunc</uri>

	<!-- Get a subset of a collection -->
	<function>
		<name>subset</name>
		<function-class>org.deltava.taglib.functions.MiscFunctions</function-class>
		<function-signature>java.util.Collection subset(java.util.Collection, int)</function-signature>
	</function>

	<!-- Get a list entry -->
	<function>
		<name>get</name>
		<function-class>org.deltava.taglib.functions.MiscFunctions</function-class>
		<function-signature>java.lang.Object get(java.util.List, int)</function-signature>
	</function>

	<!-- Get the first entry in a collection -->
	<function>
		<name>first</name>
		<function-class>org.deltava.taglib.functions.MiscFunctions</function-class>
		<function-signature>java.lang.Object first(java.util.Collection)</function-signature>
	</function>

	<!-- Convert a string to lowercase -->
	<function>
		<name>lower</name>
		<function-class>org.deltava.taglib.functions.MiscFunctions</function-class>
		<function-signature>java.lang.String toLower(java.lang.String)</function-signature>
	</function>

	<!-- Convert a string to uppercase -->
	<function>
		<name>upper</name>
		<function-class>org.deltava.taglib.functions.MiscFunctions</function-class>
		<function-signature>java.lang.String toUpper(java.lang.String)</function-signature>
	</function>

	<!-- Check wether a collection contains an object -->
	<function>
		<name>contains</name>
		<function-class>org.deltava.taglib.functions.MiscFunctions</function-class>
		<function-signature>boolean contains(java.util.Collection, java.lang.Object)</function-signature>
	</function>

	<!-- Escape out characters in String -->
	<function>
		<name>escape</name>
		<function-class>org.deltava.taglib.functions.MiscFunctions</function-class>
		<function-signature>java.lang.String escape(java.lang.String)</function-signature>
	</function>

	<!-- Perform a search and replace -->
	<function>
		<name>replace</name>
		<function-class>org.deltava.taglib.functions.MiscFunctions</function-class>
		<function-signature>java.lang.String replace(java.lang.String, java.lang.String,
			java.lang.String)</function-signature>
	</function>

	<!-- Concatenate a collection into a String -->
	<function>
		<name>splice</name>
		<function-class>org.deltava.taglib.functions.MiscFunctions</function-class>
		<function-signature>java.lang.String splice(java.util.Collection, java.lang.String)</function-signature>
	</function>

	<!-- Calculate the difference between two date/times -->
	<function>
		<name>delta</name>
		<function-class>org.deltava.taglib.functions.MiscFunctions</function-class>
		<function-signature>int difference(java.time.temporal.Temporal, java.time.temporal.Temporal)</function-signature>
	</function>

	<!-- Converts a number to a hex string -->
	<function>
		<name>hex</name>
		<function-class>org.deltava.taglib.functions.MiscFunctions</function-class>
		<function-signature>java.lang.String toHex(long)</function-signature>
	</function>

	<!-- Converts a date/time into a string -->
	<function>
		<name>dateFmt</name>
		<function-class>org.deltava.taglib.functions.MiscFunctions</function-class>
		<function-signature>java.lang.String format(java.time.temporal.Temporal, java.lang.String)</function-signature>
	</function>

	<!-- Get the ACARS Database ID -->
	<function>
		<name>ACARS_ID</name>
		<function-class>org.deltava.taglib.functions.FlightReportFunctions</function-class>
		<function-signature>int ACARSID(org.deltava.beans.flight.FlightReport)</function-signature>
	</function>

	<!-- Get the Event Database ID -->
	<function>
		<name>EventID</name>
		<function-class>org.deltava.taglib.functions.FlightReportFunctions</function-class>
		<function-signature>int eventID(org.deltava.beans.flight.FlightReport)</function-signature>
	</function>

	<!-- Get the Flight Assignment Database ID -->
	<function>
		<name>AssignID</name>
		<function-class>org.deltava.taglib.functions.FlightReportFunctions</function-class>
		<function-signature>int assignID(org.deltava.beans.flight.FlightReport)</function-signature>
	</function>

	<!-- Get the Disposal Pilot Database ID -->
	<function>
		<name>DisposalID</name>
		<function-class>org.deltava.taglib.functions.FlightReportFunctions</function-class>
		<function-signature>int disposalID(org.deltava.beans.flight.FlightReport)</function-signature>
	</function>
	
	<!-- Get the Pilot Database ID -->
	<function>
		<name>PilotID</name>
		<function-class>org.deltava.taglib.functions.FlightReportFunctions</function-class>
		<function-signature>int pilotID(org.deltava.beans.flight.FlightReport)</function-signature>
	</function>
	
	<!-- Check for ACARS Flight Report -->
	<function>
		<name>isACARS</name>
		<function-class>org.deltava.taglib.functions.FlightReportFunctions</function-class>
		<function-signature>boolean isACARS(org.deltava.beans.flight.FlightReport)</function-signature>
	</function>

	<!-- Check for ACARS Flight Report -->
	<function>
		<name>isXACARS</name>
		<function-class>org.deltava.taglib.functions.FlightReportFunctions</function-class>
		<function-signature>boolean isXACARS(org.deltava.beans.flight.FlightReport)</function-signature>
	</function>

	<!-- Check for Draft Flight Report -->
	<function>
		<name>isDraft</name>
		<function-class>org.deltava.taglib.functions.FlightReportFunctions</function-class>
		<function-signature>boolean isDraft(org.deltava.beans.flight.FlightReport)</function-signature>
	</function>

	<!-- Check for Check Flight -->
	<function>
		<name>isCheckFlight</name>
		<function-class>org.deltava.taglib.functions.FlightReportFunctions</function-class>
		<function-signature>boolean isCheckRide(org.deltava.beans.flight.FlightReport)</function-signature>
	</function>

	<!-- Check for Charter Flight -->
	<function>
		<name>isCharter</name>
		<function-class>org.deltava.taglib.functions.FlightReportFunctions</function-class>
		<function-signature>boolean isCharter(org.deltava.beans.flight.FlightReport)</function-signature>
	</function>

	<!-- Check for Academy Flight -->
	<function>
		<name>isAcademy</name>
		<function-class>org.deltava.taglib.functions.FlightReportFunctions</function-class>		
		<function-signature>boolean isAcademy(org.deltava.beans.flight.FlightReport)</function-signature>
	</function>

	<!-- Check for Dispatch-planned Flight -->
	<function>
		<name>isDispatch</name>
		<function-class>org.deltava.taglib.functions.FlightReportFunctions</function-class>
		<function-signature>boolean isDispatch(org.deltava.beans.flight.FlightReport)</function-signature>
	</function>

	<!-- Check for Online Flight Report -->
	<function>
		<name>isOnline</name>
		<function-class>org.deltava.taglib.functions.FlightReportFunctions</function-class>
		<function-signature>boolean isOnline(org.deltava.beans.flight.FlightReport)</function-signature>
	</function>

	<!-- Check for Historic Flight Report -->
	<function>
		<name>isHistoric</name>
		<function-class>org.deltava.taglib.functions.FlightReportFunctions</function-class>
		<function-signature>boolean isHistoric(org.deltava.beans.flight.FlightReport)</function-signature>
	</function>

	<!-- Check if Flight counts towards promotion -->
	<function>
		<name>isPromoLeg</name>
		<function-class>org.deltava.taglib.functions.FlightReportFunctions</function-class>
		<function-signature>boolean promoLeg(org.deltava.beans.flight.FlightReport)</function-signature>
	</function>

	<!-- Return what equipment types a Flight counts towards promotion in -->
	<function>
		<name>promoEQTypes</name>
		<function-class>org.deltava.taglib.functions.FlightReportFunctions</function-class>
		<function-signature>java.lang.Stirng promoTypes(org.deltava.beans.flight.FlightReport)</function-signature>
	</function>

	<!-- Get Online Flight Report network name-->
	<function>
		<name>network</name>
		<function-class>org.deltava.taglib.functions.FlightReportFunctions</function-class>
		<function-signature>java.lang.String network(org.deltava.beans.flight.FlightReport)</function-signature>
	</function>
	
	<!-- Check for Unrated Equipment -->
	<function>
		<name>isRated</name>
		<function-class>org.deltava.taglib.functions.FlightReportFunctions</function-class>
		<function-signature>boolean isRated(org.deltava.beans.flight.FlightReport)</function-signature>
	</function>

	<!-- Check for Flight Diversion -->
	<function>
		<name>isDivert</name>
		<function-class>org.deltava.taglib.functions.FlightReportFunctions</function-class>
		<function-signature>boolean isDivert(org.deltava.beans.flight.FlightReport)</function-signature>
	</function>

	<!-- Check for On-Time data -->
	<function>
		<name>hasOnTime</name>
		<function-class>org.deltava.taglib.functions.FlightReportFunctions</function-class>
		<function-signature>boolean hasOnTime(org.deltava.beans.flight.FlightReport)</function-signature>
	</function>

	<!-- Check for Unknown Route flag -->
	<function>
		<name>routeWarn</name>
		<function-class>org.deltava.taglib.functions.FlightReportFunctions</function-class>
		<function-signature>boolean routeWarn(org.deltava.beans.flight.FlightReport)</function-signature>
	</function>

	<!-- Check for Excessive Range flag -->
	<function>
		<name>rangeWarn</name>
		<function-class>org.deltava.taglib.functions.FlightReportFunctions</function-class>
		<function-signature>boolean rangeWarn(org.deltava.beans.flight.FlightReport)</function-signature>
	</function>

	<!-- Check for Suspicious Time flag -->
	<function>
		<name>timeWarn</name>
		<function-class>org.deltava.taglib.functions.FlightReportFunctions</function-class>
		<function-signature>boolean timeWarn(org.deltava.beans.flight.FlightReport)</function-signature>
	</function>

	<!-- Check for ETOPS warning flag -->
	<function>
		<name>etopsWarn</name>
		<function-class>org.deltava.taglib.functions.FlightReportFunctions</function-class>
		<function-signature>boolean etopsWarn(org.deltava.beans.flight.FlightReport)</function-signature>
	</function>
	
	<!-- Check for airspace warning flag -->
	<function>
	   <name>airspaceWarn</name>
	   <function-class>org.deltava.taglib.functions.FlightReportFunctions</function-class>
	   <function-signature>boolean airspaceWarn(org.deltava.beans.flight.FlightReport)</function-signature>
	</function>

	<!-- Check for excessive weight flag -->
	<function>
		<name>weightWarn</name>
		<function-class>org.deltava.taglib.functions.FlightReportFunctions</function-class>
		<function-signature>boolean weightWarn(org.deltava.beans.flight.FlightReport)</function-signature>
	</function>

	<!-- Check for in-flight refueling warning flag -->
	<function>
		<name>refuelWarn</name>
		<function-class>org.deltava.taglib.functions.FlightReportFunctions</function-class>
		<function-signature>boolean refuelWarn(org.deltava.beans.flight.FlightReport)</function-signature>
	</function>

	<!-- Check for runway length warning flag -->
	<function>
		<name>rwyWarn</name>
		<function-class>org.deltava.taglib.functions.FlightReportFunctions</function-class>
		<function-signature>boolean runwayWarn(org.deltava.beans.flight.FlightReport)</function-signature>
	</function>

	<!-- Check for any warning flag -->
	<function>
		<name>anyWarn</name>
		<function-class>org.deltava.taglib.functions.FlightReportFunctions</function-class>
		<function-signature>boolean hasWarn(org.deltava.beans.flight.FlightReport)</function-signature>
	</function>

	<!-- Check for visible sim Capabilities -->
	<function>
		<name>hasCapabilities</name>
		<function-class>org.deltava.taglib.functions.FlightReportFunctions</function-class>	
		<function-signature>boolean hasVisibleCapabilities(org.deltava.beans.flight.FlightReport)</function-signature>
	</function>

	<!-- Check for Check Ride -->
	<function>
		<name>isCheckRide</name>
		<function-class>org.deltava.taglib.functions.TestingFunctions</function-class>
		<function-signature>boolean isCheckRide(org.deltava.beans.testing.Test)</function-signature>
	</function>

	<!-- Check for multiple-choice question -->
	<function>
		<name>isMultiChoice</name>
		<function-class>org.deltava.taglib.functions.TestingFunctions</function-class>
		<function-signature>boolean isMultiChoice(org.deltava.beans.testing.Question)</function-signature>
	</function>

	<!-- Check for route plotting question -->
	<function>
		<name>isRoutePlot</name>
		<function-class>org.deltava.taglib.functions.TestingFunctions</function-class>
		<function-signature>boolean isRoutePlot(org.deltava.beans.testing.Question)</function-signature>
	</function>

	<!-- Check for correctly answered question -->
	<function>
		<name>correct</name>
		<function-class>org.deltava.taglib.functions.TestingFunctions</function-class>
		<function-signature>boolean correct(org.deltava.beans.testing.Question)</function-signature>
	</function>

	<!-- Check for incorrectly answered question -->
	<function>
		<name>incorrect</name>
		<function-class>org.deltava.taglib.functions.TestingFunctions</function-class>
		<function-signature>boolean incorrect(org.deltava.beans.testing.Test, org.deltava.beans.testing.Question)</function-signature>
	</function>

	<!-- Check for passed Examination -->
	<function>
		<name>passed</name>
		<function-class>org.deltava.taglib.functions.TestingFunctions</function-class>
		<function-signature>boolean isPass(org.deltava.beans.testing.Test)</function-signature>
	</function>

	<!-- Check for failed Examination -->
	<function>
		<name>failed</name>
		<function-class>org.deltava.taglib.functions.TestingFunctions</function-class>
		<function-signature>boolean isFail(org.deltava.beans.testing.Test)</function-signature>
	</function>

	<!-- Check for pending Examination -->
	<function>
		<name>pending</name>
		<function-class>org.deltava.taglib.functions.TestingFunctions</function-class>
		<function-signature>boolean isPending(org.deltava.beans.testing.Test)</function-signature>
	</function>

	<!-- Check for submitted Examination -->
	<function>
		<name>submitted</name>
		<function-class>org.deltava.taglib.functions.TestingFunctions</function-class>
		<function-signature>boolean isSubmitted(org.deltava.beans.testing.Test)</function-signature>
	</function>

	<!-- Check for Check Ride waiver -->
	<function>
		<name>isWaiver</name>
		<function-class>org.deltava.taglib.functions.TestingFunctions</function-class>
		<function-signature>boolean isWaiver(org.deltava.beans.testing.CheckRide)</function-signature>
	</function>

	<!-- Get Captain's Examination Name -->
	<function>
		<name>examC</name>
		<function-class>org.deltava.taglib.functions.EquipmentTypeFunctions</function-class>
		<function-signature>java.util.Collection examC(org.deltava.beans.EquipmentType)</function-signature>
	</function>

	<!-- Get First Officer's Examination Name -->
	<function>
		<name>examFO</name>
		<function-class>org.deltava.taglib.functions.EquipmentTypeFunctions</function-class>
		<function-signature>java.util.Collection examFO(org.deltava.beans.EquipmentType)</function-signature>
	</function>


	<!-- Check if an Event is available for signup -->
	<function>
		<name>isEventOpen</name>
		<function-class>org.deltava.taglib.functions.OnlineEventFunctions</function-class>
		<function-signature>boolean isOpen(org.deltava.beans.event.Event)</function-signature>
	</function>

	<!-- Check if a pilot is signed up for an Event -->
	<function>
		<name>isSignedUp</name>
		<function-class>org.deltava.taglib.functions.OnlineEventFunctions</function-class>
		<function-signature>boolean isSignedUp(org.deltava.beans.event.Event, int)</function-signature>
	</function>

	<!-- Check if a pilot has an assigned flight for an Event -->
	<function>
		<name>isAssigned</name>
		<function-class>org.deltava.taglib.functions.OnlineEventFunctions</function-class>
		<function-signature>boolean isAssigned(org.deltava.beans.event.Event, int)</function-signature>
	</function>

	<!-- Get Signups for a particular Event route -->
	<function>
		<name>routeSignups</name>
		<function-class>org.deltava.taglib.functions.OnlineEventFunctions</function-class>
		<function-signature>java.util.Collection routeSignups(org.deltava.beans.event.Event, int)</function-signature>
	</function>


	<!-- Check if a Calendar Entry is an Instruction Session -->
	<function>
		<name>isInstructionSession</name>
		<function-class>org.deltava.taglib.functions.AcademyFunctions</function-class>
		<function-signature>boolean isSession(org.deltava.beans.CalendarEntry)</function-signature>
	</function>

	<!-- Check if a Calendar Entry is an Instruction Flight -->
	<function>
		<name>isInstructionFlight</name>
		<function-class>org.deltava.taglib.functions.AcademyFunctions</function-class>
		<function-signature>boolean isFlight(org.deltava.beans.CalendarEntry)</function-signature>
	</function>

	<!-- Check if a Calendar Entry is an Instructor busy time entry -->
	<function>
		<name>isBusyTime</name>
		<function-class>org.deltava.taglib.functions.AcademyFunctions</function-class>
		<function-signature>boolean isBusy(org.deltava.beans.CalendarEntry)</function-signature>
	</function>

	<!-- Check if a Course is active -->
	<function>
		<name>isCourseActive</name>
		<function-class>org.deltava.taglib.functions.AcademyFunctions</function-class>
		<function-signature>boolean isActive(org.deltava.beans.academy.Course)</function-signature>
	</function>

	<!-- Filter a Pilot's Ceritifications to only include completed ones -->
	<function>
	   <name>filterCerts</name>
	   <function-class>org.deltava.taglib.functions.AcademyFunctions</function-class>
	   <function-signature>java.util.Collection filterCerts(java.util.Collection, java.util.Collection)</function-signature>
	</function>

    <!-- Filter a Pilot's VATSIM ratings to only include Ratings obtained outside the Academy -->
    <function>
        <name>filterRatings</name>
        <function-class>org.deltava.taglib.functions.AcademyFunctions</function-class>
        <function-signature>java.util.Collection filterRatings(java.util.Collection, java.util.Collection)</function-signature>
    </function>

	<!-- Check if a user has a security role -->
	<function>
		<name>hasRole</name>
		<function-class>org.deltava.taglib.functions.PersonFunctions</function-class>
		<function-signature>boolean hasRole(java.lang.String, org.deltava.beans.Person)</function-signature>
	</function>

	<!-- Check if an e-mail address is valid -->
	<function>
		<name>isEMailValid</name>
		<function-class>org.deltava.taglib.functions.PersonFunctions</function-class>
		<function-signature>boolean isEMailValid(org.deltava.beans.Person)</function-signature>
	</function>

	<!-- Check if a Person is an Applicant -->
	<function>
		<name>isApplicant</name>
		<function-class>org.deltava.taglib.functions.PersonFunctions</function-class>
		<function-signature>boolean isApplicant(org.deltava.beans.Person)</function-signature>
	</function>

	<!-- Check if a Person is a Pilot -->
	<function>
		<name>isPilot</name>
		<function-class>org.deltava.taglib.functions.PersonFunctions</function-class>
		<function-signature>boolean isPilot(org.deltava.beans.Person)</function-signature>
	</function>

	<!-- Check if a Person is an Active/On Leave Pilot -->
	<function>
		<name>isActive</name>
		<function-class>org.deltava.taglib.functions.PersonFunctions</function-class>
		<function-signature>boolean isActive(org.deltava.beans.Person)</function-signature>
	</function>

	<!-- Check if a Person is a Suspended Pilot -->
	<function>
		<name>isSuspended</name>
		<function-class>org.deltava.taglib.functions.PersonFunctions</function-class>
		<function-signature>boolean isSuspended(org.deltava.beans.Person)</function-signature>
	</function>
	
	<!-- Display an Online Network ID -->
	<function>
		<name>networkID</name>
		<function-class>org.deltava.taglib.functions.PersonFunctions</function-class>
		<function-signature>java.lang.String getNetworkID(org.deltava.beans.Person, java.lang.String)</function-signature>
	</function>

	<!-- Check if a Person has an Instant Messenger address -->
	<function>
		<name>hasIM</name>
		<function-class>org.deltava.taglib.functions.PersonFunctions</function-class>
		<function-signature>boolean hasIM(org.deltava.beans.Person, java.lang.String)</function-signature>
	</function>

	<!-- Filter Accomplishments -->
	<function>
		<name>accFilter</name>
		<function-class>org.deltava.taglib.functions.AccomplishmentFunctions</function-class>
		<function-signature>java.util.Collection filter(java.util.Collection)</function-signature>
	</function>
</taglib>
